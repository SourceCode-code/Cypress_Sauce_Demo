name: Cypress Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '30 3 * * *'  # 9:00 AM IST
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cypress-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies cleanly
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Install Cypress binary
        run: npx cypress install

      - name: Run Cypress tests with mochawesome reporter
        run: npx cypress run --reporter mochawesome --reporter-options reportDir=cypress/results,overwrite=true,html=false,json=true

      - name: Generate combined Mochawesome report
        if: always()
        run: |
          npx mochawesome-merge cypress/results/*.json -o cypress/results/output.json
          npx marge cypress/results/output.json --reportDir cypress/results --inline

      - name: Generate Excel report if script exists
        if: always()
        run: |
          if [ -f ./generate_excel_report.js ]; then
            node generate_excel_report.js
          else
            echo "generate_excel_report.js not found, skipping."
          fi

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            cypress_Task/output.json
            cypress_Task/mochawesome-report/output.html
            cypress_Task/Daily_Tracker.xlsx

      - name: Install jq
        if: always()
        run: sudo apt-get install -y jq

      - name: Extract test summary stats
        if: always()
        id: extract_results
        run: |
          if [ -f cypress/results/output.json ]; then
            total_passed=$(jq '.stats.passes' cypress/results/output.json)
            total_failed=$(jq '.stats.failures' cypress/results/output.json)
            total_pending=$(jq '.stats.pending' cypress/results/output.json)
            failed_cases=$(jq -r '[.results[] | .suites[].tests[] | select(.state == "failed") | .title] | join(", ")' cypress/results/output.json)
            total_tests=$((total_passed + total_failed + total_pending))

            echo "TOTAL_TESTS=$total_tests" >> $GITHUB_ENV
            echo "TOTAL_PASSED=$total_passed" >> $GITHUB_ENV
            echo "TOTAL_FAILED=$total_failed" >> $GITHUB_ENV
            echo "TOTAL_PENDING=$total_pending" >> $GITHUB_ENV
            echo "FAILED_CASES=$failed_cases" >> $GITHUB_ENV
          else
            echo "cypress/results/output.json not found, skipping stats extraction."
          fi

      - name: Send test results via email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: siddhantsourceandcode@gmail.com
          password: jfgt antr xuzj dish
          to: vaibhavps0595@gmail.com, siddhantgadakh121@gmail.com
          from:  siddhantsourceandcode@gmail.com
          subject: "Cypress Test Results - ${{ github.run_number }} $(date +'%d-%m-%y')"
          attachments: |
            cypress_Task/output.json
            cypress_Task/mochawesome-report/output.html
            cypress_Task/Daily_Tracker.xlsx
          body: |
            Dear Team,

            Here are the Cypress test results from the latest run:
            - Total Testcases: ${{ env.TOTAL_TESTS }}
            - Passed: ${{ env.TOTAL_PASSED }}
            - Failed: ${{ env.TOTAL_FAILED }}
            - Pending: ${{ env.TOTAL_PENDING }}
            - Failed Test Cases: ${{ env.FAILED_CASES }}

            Please find the attached reports.

            Regards,
            Automation Team
